{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","countInSock","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7a43271a.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>eShopee</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Route\r\n                            render={({ history }) => (\r\n                                <SearchBox history={history} />\r\n                            )}\r\n                        />\r\n                        <Nav className='ml-auto'>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart'></i>{' '}\r\n                                    Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.name}\r\n                                    id='username'\r\n                                >\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user'></i> Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>eShopee</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'eShopee - Buy best products',\r\n    description: 'Buy products online',\r\n    keywords: 'electronics',\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(\r\n        (state) => state.productReviewCreate\r\n    )\r\n    const { success: successProductReview, error: errorProductReview } =\r\n        productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                            />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    ${product.price}\r\n                                                </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0\r\n                                                    ? 'In Stock'\r\n                                                    : 'Out Of Stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange={(e) =>\r\n                                                            setQty(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[\r\n                                                            ...Array(\r\n                                                                product.countInStock\r\n                                                            ).keys(),\r\n                                                        ].map((x) => (\r\n                                                            <option\r\n                                                                key={x + 1}\r\n                                                                value={x + 1}\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={\r\n                                                product.countInStock === 0\r\n                                            }\r\n                                        >\r\n                                            Add To Cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && (\r\n                                <Message>No Reviews</Message>\r\n                            )}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>{review.createdAt}</p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>\r\n                                            {errorProductReview}\r\n                                        </Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) =>\r\n                                                        setRating(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <option value=''>\r\n                                                        Select...\r\n                                                    </option>\r\n                                                    <option value='1'>\r\n                                                        1 - Poor\r\n                                                    </option>\r\n                                                    <option value='2'>\r\n                                                        2 - Fair\r\n                                                    </option>\r\n                                                    <option value='3'>\r\n                                                        3 - Good\r\n                                                    </option>\r\n                                                    <option value='4'>\r\n                                                        4 - Very Good\r\n                                                    </option>\r\n                                                    <option value='5'>\r\n                                                        5 - Excellent\r\n                                                    </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) =>\r\n                                                        setComment(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                type='submit'\r\n                                                variant='primary'\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please{' '}\r\n                                            <Link to='/login'>sign in</Link> to\r\n                                            write a review{' '}\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user.name) {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && (\r\n                    <Message variant='success'>Profile Updated</Message>\r\n                )}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/order/${order._id}`}\r\n                                        >\r\n                                            <Button\r\n                                                className='btn-sm'\r\n                                                variant='light'\r\n                                            >\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInSock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}